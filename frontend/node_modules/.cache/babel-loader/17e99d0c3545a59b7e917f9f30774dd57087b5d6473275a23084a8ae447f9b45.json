{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ojuss\\\\OneDrive\\\\Desktop\\\\RVU\\\\Sem 6\\\\Internship\\\\Expense Tracker\\\\frontend\\\\src\\\\components\\\\ExpenseCharts.js\";\nimport React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst ExpenseCharts = ({\n  transactions\n}) => {\n  // Calculate total income and expenses\n  const totalIncome = transactions.filter(t => t.type === \"income\").reduce((sum, t) => sum + t.amount, 0);\n  const totalExpenses = transactions.filter(t => t.type === \"expense\").reduce((sum, t) => sum + t.amount, 0);\n\n  // Calculate category-wise expenses\n  const categoryExpenses = transactions.filter(t => t.type === \"expense\").reduce((acc, t) => {\n    acc[t.category] = (acc[t.category] || 0) + t.amount;\n    return acc;\n  }, {});\n\n  // Chart options\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: \"bottom\",\n        labels: {\n          padding: 20,\n          font: {\n            size: 12\n          }\n        }\n      },\n      tooltip: {\n        backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n        titleColor: \"#2c3e50\",\n        bodyColor: \"#2c3e50\",\n        borderColor: \"#e9ecef\",\n        borderWidth: 1,\n        padding: 10,\n        displayColors: true,\n        usePointStyle: true\n      }\n    }\n  };\n\n  // Prepare data for income vs expense pie chart\n  const incomeExpenseData = {\n    labels: [\"Income\", \"Expenses\"],\n    datasets: [{\n      data: [totalIncome, totalExpenses],\n      backgroundColor: [\"#4CAF50\", \"#FF5252\"],\n      borderColor: [\"#388E3C\", \"#D32F2F\"],\n      borderWidth: 2\n    }]\n  };\n\n  // Prepare data for category breakdown pie chart\n  const categoryData = {\n    labels: Object.keys(categoryExpenses),\n    datasets: [{\n      data: Object.values(categoryExpenses),\n      backgroundColor: [\"#FF6384\",\n      // Food\n      \"#36A2EB\",\n      // Drinks\n      \"#FFCE56\",\n      // Travel\n      \"#4BC0C0\",\n      // Shopping\n      \"#9966FF\",\n      // Entertainment\n      \"#FF9F40\",\n      // Bills\n      \"#4CAF50\",\n      // Healthcare\n      \"#9C27B0\",\n      // Education\n      \"#FF5722\",\n      // Housing\n      \"#2196F3\",\n      // Transportation\n      \"#795548\",\n      // Personal Care\n      \"#607D8B\",\n      // Gifts\n      \"#9E9E9E\" // Other\n      ],\n      borderWidth: 2\n    }]\n  };\n\n  // Find top spending category\n  const topCategory = Object.entries(categoryExpenses).sort(([, a], [, b]) => b - a)[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Income vs Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: incomeExpenseData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Expense Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: categoryData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-category\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Top Spending Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), topCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: topCategory[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", topCategory[1].toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpenseCharts;\nexport default ExpenseCharts;\nvar _c;\n$RefreshReg$(_c, \"ExpenseCharts\");","map":{"version":3,"names":["React","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","ExpenseCharts","transactions","totalIncome","filter","t","type","reduce","sum","amount","totalExpenses","categoryExpenses","acc","category","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","labels","padding","font","size","tooltip","backgroundColor","titleColor","bodyColor","borderColor","borderWidth","displayColors","usePointStyle","incomeExpenseData","datasets","data","categoryData","Object","keys","values","topCategory","entries","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/ojuss/OneDrive/Desktop/RVU/Sem 6/Internship/Expense Tracker/frontend/src/components/ExpenseCharts.js"],"sourcesContent":["import React from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst ExpenseCharts = ({ transactions }) => {\r\n  // Calculate total income and expenses\r\n  const totalIncome = transactions\r\n    .filter((t) => t.type === \"income\")\r\n    .reduce((sum, t) => sum + t.amount, 0);\r\n\r\n  const totalExpenses = transactions\r\n    .filter((t) => t.type === \"expense\")\r\n    .reduce((sum, t) => sum + t.amount, 0);\r\n\r\n  // Calculate category-wise expenses\r\n  const categoryExpenses = transactions\r\n    .filter((t) => t.type === \"expense\")\r\n    .reduce((acc, t) => {\r\n      acc[t.category] = (acc[t.category] || 0) + t.amount;\r\n      return acc;\r\n    }, {});\r\n\r\n  // Chart options\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: \"bottom\",\r\n        labels: {\r\n          padding: 20,\r\n          font: {\r\n            size: 12,\r\n          },\r\n        },\r\n      },\r\n      tooltip: {\r\n        backgroundColor: \"rgba(255, 255, 255, 0.9)\",\r\n        titleColor: \"#2c3e50\",\r\n        bodyColor: \"#2c3e50\",\r\n        borderColor: \"#e9ecef\",\r\n        borderWidth: 1,\r\n        padding: 10,\r\n        displayColors: true,\r\n        usePointStyle: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  // Prepare data for income vs expense pie chart\r\n  const incomeExpenseData = {\r\n    labels: [\"Income\", \"Expenses\"],\r\n    datasets: [\r\n      {\r\n        data: [totalIncome, totalExpenses],\r\n        backgroundColor: [\"#4CAF50\", \"#FF5252\"],\r\n        borderColor: [\"#388E3C\", \"#D32F2F\"],\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Prepare data for category breakdown pie chart\r\n  const categoryData = {\r\n    labels: Object.keys(categoryExpenses),\r\n    datasets: [\r\n      {\r\n        data: Object.values(categoryExpenses),\r\n        backgroundColor: [\r\n          \"#FF6384\", // Food\r\n          \"#36A2EB\", // Drinks\r\n          \"#FFCE56\", // Travel\r\n          \"#4BC0C0\", // Shopping\r\n          \"#9966FF\", // Entertainment\r\n          \"#FF9F40\", // Bills\r\n          \"#4CAF50\", // Healthcare\r\n          \"#9C27B0\", // Education\r\n          \"#FF5722\", // Housing\r\n          \"#2196F3\", // Transportation\r\n          \"#795548\", // Personal Care\r\n          \"#607D8B\", // Gifts\r\n          \"#9E9E9E\", // Other\r\n        ],\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Find top spending category\r\n  const topCategory = Object.entries(categoryExpenses).sort(\r\n    ([, a], [, b]) => b - a\r\n  )[0];\r\n\r\n  return (\r\n    <div className=\"charts-container\">\r\n      <div className=\"chart-section\">\r\n        <h2>Income vs Expenses</h2>\r\n        <div className=\"chart\">\r\n          <Pie data={incomeExpenseData} options={chartOptions} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chart-section\">\r\n        <h2>Expense Categories</h2>\r\n        <div className=\"chart\">\r\n          <Pie data={categoryData} options={chartOptions} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"top-category\">\r\n        <h2>Top Spending Category</h2>\r\n        {topCategory && (\r\n          <div className=\"category-info\">\r\n            <h3>{topCategory[0]}</h3>\r\n            <p>${topCategory[1].toFixed(2)}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseCharts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}